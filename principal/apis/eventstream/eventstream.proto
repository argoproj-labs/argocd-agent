// Copyright 2024 The argocd-agent Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/argoproj-labs/argocd-agent/pkg/api/grpc/eventstreamapi";

package eventstreamapi;

import "google/api/annotations.proto";

// The following imports require dependencies to be vendored in
import "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1/generated.proto";
import "github.com/cloudevents/sdk-go/binding/format/protobuf/v2/pb/cloudevent.proto";

// Event describes an event
message Event {
    io.cloudevents.v1.CloudEvent event = 1;
}

message PushSummary {
    string result = 1;
    int32 received = 2;
    int32 processed = 3;
}

message PingRequest {

}

message PongReply {

}

service EventStream {
    rpc Subscribe(stream Event) returns (stream Event) {
        option (google.api.http).get = "/api/v1/events/stream";
    }

    rpc Push(stream Event) returns (PushSummary) {
        option (google.api.http).get = "/api/v1/events/push";
    }

    rpc Ping(PingRequest) returns (PongReply) {
        option (google.api.http).get = "/api/v1/ping";
    }
}
