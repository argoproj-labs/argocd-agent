# Default values for argocd-agent-agent
# This is a YAML-formatted file.

# Image configuration
image:
  repository: ghcr.io/argoproj-labs/argocd-agent/argocd-agent
  pullPolicy: Always
  tag: "latest"

# Replica count
replicaCount: 1

# ServiceAccount configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext: {}

# Container security context
securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Metrics service configuration
metricsService:
  type: ClusterIP
  port: 8000

# Agent configuration parameters
agent:
  # The mode this agent should operate in. Valid values are "autonomous" or "managed".
  mode: "autonomous"
  # Valid credential identifier for this agent.
  creds: "userpass:/app/config/creds/userpass.creds"
  # The log level the agent should use. Valid values are trace, debug, info, warn and error.
  logLevel: "info"
  # The namespace the agent should operate and manage the Argo CD resources in.
  namespace: "argocd"
  # The port the metrics server should listen on.
  metricsPort: "8181"
  
  # Server configuration
  server:
    # The remote address of the principal to connect to. Can be a DNS name, an IPv4 address or an IPv6 address.
    address: "argocd-agent-principal.example.com"
    # The remote port of the principal to connect to.
    port: "443"
  
  # TLS configuration
  tls:
    # Whether to skip the validation of the remote TLS credentials. Insecure. Do only use for development purposes.
    clientInsecure: "false"
    # The name of the secret containing the certificates for the TLS root certificate authority used to validate the remote principal.
    rootCaSecretName: "argocd-agent-ca"
    # The path to a file containing the certificates for the TLS root certificate authority used to validate the remote principal.
    rootCaPath: ""
    # The name of the secret containing the agent certificate.
    secretName: "argocd-agent-client-tls"
    client:
      # Path to a file containing the agent's TLS client certificate.
      certPath: ""
      # Path to a file containing the agent's TLS client private key.
      keyPath: ""

# Resources configuration
resources: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Namespace where the chart will be deployed
namespaceOverride: "" 