apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "argocd-agent-principal.fullname" . }}
  labels:
    {{- include "argocd-agent-principal.labels" . | nindent 4 }}
  {{- with include "argocd-agent-principal.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "argocd-agent-principal.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/part-of: argocd-agent
      app.kubernetes.io/component: principal
  template:
    metadata:
      labels:
        {{- include "argocd-agent-principal.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/part-of: argocd-agent
        app.kubernetes.io/component: principal
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "argocd-agent-principal.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - principal
            {{- range .Values.principal.additionalArgs }}
            - {{ . | quote }}
            {{- end }}
          env:
          - name: ARGOCD_PRINCIPAL_LISTEN_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.listen.host
                optional: true
          - name: ARGOCD_PRINCIPAL_LISTEN_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.listen.port
                optional: true
          - name: ARGOCD_PRINCIPAL_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.log.level
                optional: true
          - name: ARGOCD_PRINCIPAL_METRICS_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.metrics.port
                optional: true
          - name: ARGOCD_PRINCIPAL_HEALTH_CHECK_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.healthz.port
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.namespace
                optional: true
          - name: ARGOCD_PRINCIPAL_ALLOWED_NAMESPACES
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.allowed-namespaces
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_ENABLE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.namespace-create.enable
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_PATTERN
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.namespace-create.pattern
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_LABELS
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.namespace-create.labels
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_CERT_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.server.cert-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.server.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ALLOW_GENERATE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.server.allow-generate
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_CLIENT_CERT_REQUIRE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.client-cert.require
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ROOT_CA_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.server.root-ca-secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.server.root-ca-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_CLIENT_CERT_MATCH_SUBJECT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.tls.client-cert.match-subject
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_TLS_CERT_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.tls.cert-path
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_TLS_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.tls.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_CA_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.ca.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_CA_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.ca.path
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_ALLOW_GENERATE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.jwt.allow-generate
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.jwt.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.jwt.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_AUTH
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.auth
                optional: true
          - name: ARGOCD_PRINCIPAL_LOG_FORMAT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.log.format
                optional: true
          - name: ARGOCD_PRINCIPAL_ENABLE_WEBSOCKET
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.websocket.enable
                optional: true
          - name: ARGOCD_PRINCIPAL_REDIS_COMPRESSION_TYPE
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.redis.compression.type
                optional: true
          - name: ARGOCD_PRINCIPAL_REDIS_SERVER_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.redis.server.address
                optional: true
          - name: ARGOCD_PRINCIPAL_ENABLE_RESOURCE_PROXY
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.resource-proxy.enable
                optional: true
          - name: ARGOCD_PRINCIPAL_KEEP_ALIVE_MIN_INTERVAL
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.keep-alive.min-interval
                optional: true
          - name: ARGOCD_PRINCIPAL_PPROF_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ include "argocd-agent-principal.configMapName" . }}
                key: principal.pprof.port
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: argocd-redis
                key: auth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.principal.listen.port }}
              name: principal
            - containerPort: {{ .Values.principal.metrics.port }}
              name: metrics
            - containerPort: {{ .Values.principal.healthz.port }}
              name: healthz
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: jwt-secret
              mountPath: /app/config/jwt
            - name: userpass-passwd
              mountPath: /app/config/userpass
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      - name: userpass-passwd
        secret:
          secretName: {{ include "argocd-agent-principal.userpassSecretName" . }}
          items:
          - key: passwd
            path: passwd
          optional: true
      - name: jwt-secret
        secret:
          secretName: {{ .Values.principal.jwt.secretName | quote }}
          items:
          - key: jwt.key
            path: jwt.key
          optional: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
