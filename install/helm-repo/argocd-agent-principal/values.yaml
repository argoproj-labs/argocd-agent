namespace: argocd

# Image configuration
image:
  repository: ghcr.io/argoproj-labs/argocd-agent/argocd-agent
  tag: "d7ee8580"  # Use specific version instead of latest
  pullPolicy: IfNotPresent

replicaCount: 1

resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 2
    memory: 4Gi

# Service configuration with LoadBalancer
service:
  type: LoadBalancer
  port: 443
  targetPort: 8443
  annotations:
    networking.gke.io/load-balancer-type: "Internal"

# Metrics service for monitoring
metricsService:
  enabled: true
  type: ClusterIP
  port: 8000
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"

# Health check service
healthzService:
  enabled: true
  type: ClusterIP
  port: 8003

# Principal configuration for production
principal:
  # Additional arguments apart from default 'principal' command
  additionalArgs: []
  # Example:
  # additionalArgs:
  #  - --redis-server-address
  #  - argocd-argo-cd-redis:6379
  metrics:
    port: 8000
  healthz:
    port: 8003
  listen:
    port: 8443
  # Logging
  log:
    level: info
  
  # Namespace configuration
  namespace: "argocd"
  allowedNamespaces: "argocd,argocd-apps,default"
  
  # Namespace creation (usually disabled in production)
  namespaceCreate:
    enable: true
    pattern: "-agent"
    labels: "managed-by=argocd-agent,environment=production"
  
  # TLS configuration - secure setup
  tls:
    secretName: "argocd-agent-principal-tls"
    server:
      certPath: ""
      keyPath: ""
      allowGenerate: false  # Never allow in production
      rootCaSecretName: "argocd-agent-ca"
      rootCaPath: ""
    clientCert:
      require: true  # Require client certificates
      matchSubject: true  # Match subject to agent name
  
  # Resource proxy configuration
  redis:
    compressionType: "gzip"
    server:
      address: "argocd-self-hosted-redis:6379" # Defaults to argocd-redis:6379 if not provided
  resourceProxy:
    enabled: true
    secretName: "argocd-agent-resource-proxy-tls"
    tls:
      certPath: ""
      keyPath: ""
    ca:
      secretName: "argocd-agent-ca"
      path: ""
  
  # JWT configuration
  jwt:
    allowGenerate: false  # Never allow in production
    secretName: "argocd-agent-jwt"
    keyPath: ""
  
  # Authentication - use mTLS in production
  auth: "mtls:CN=([^,]+)"

  # Security context for production
  securityContext:
    capabilities:
      drop:
        - ALL
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
    seccompProfile:
      type: RuntimeDefault

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001

  # Node affinity for production workloads
  affinity: {}

  # Tolerations for dedicated nodes
  tolerations: {}

  # Node selector for dedicated nodes
  nodeSelector: {}

  # Secrets configuration -Use create and base64 encoded values to create k8s secrets
  secrets:
    ca:
      tls:  
        create: true
        key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRREJWMGxqVE9hM3NCUVQKY1NSWXpnenB5cVU3aWdNWWtBUmJmc0ZzZVRZTVpHS1paeHJZaHQ3dmVVL2xjRngxam11U0JkWlJOZVBpRUcyMQpsUytXTkpXOFFmbW55SmhIUWE3M2ZaTHRubzA2UFdYL0kwL0FTTHZ1WGtzOUliZ3d0OXZTelVGRytteEROSFd6Ck1Sd0lBa2ZpUE1qVGREejlOVktpajJrcmRHR1VzbHF0aHZldldqU2RrRk90Uy9qajFLUCs0Z1FrSG9ZNEdVcHgKU0ZtbEl5OEdodG9KWXYwbUtrck9pVnRUYWtoUVJqck9nYVhvTVAyZjd2Smk4UCtEdWo3UjRMU3dLQ1pJNEZWVwpRSy83ZnpOUzc4ejlFWFQwaEZSb0ZUMUR6MnB6OHFSZUljL3M2eW9XcTlXRHRVOUdhZllLemZPWVE3SStmTXlqCkxEa1RDbWVKdkNoaUxaR1RaaUZlQmpJZEhhQ1NUTzFzNHNkT0xGb1FtYVRmWXVnNnVLc2llSFpGMzF0VlFMeXYKeHRndjdnN01RS0dkRHd3TzZyYmtPdTlDeGhYd3A1akNQamxKR0RLREtoL2duMGFHREtZaW9NWktzWFJvU3ZRcwo1MzJqdWxUOUNWL2VBS203UnhodWM4SUlFUzVZSW5xbEgyRStOSEpoTXcxamdtYzNHNVdPdkM2RERwRGo4UCs3CmdJalZGeEpvTlVYVlI2Qm1IVmovTWRHY25kODNSeDFHallHenVJaDhMSjZRK0xBRCs0NUw0VWR0MERFSGlTRHUKY2FZRkFUL0dwYkF4bGhtTzFRRmwwdjR0UkVjcTE3YmkzT0RUcjYrZi9jQ3BHTjdSa0FsbmVaTG15UlppV0dXMgo5V0hBdSthZTJXaUNIbXNEMkQrbHNXbUcxc2szU1FJREFRQUJBb0lDQUFITkJTUEhTK0h5ZGFqT1ZqM3NtMWt2CmFEbkd5dUM5ekY1Si9INWIvM1crNkZwVGlBZTlwZHpUcjFiWVd2b3RSMUozOHY3dUJFRTE0S2t1bGdhWkdSQ2QKK2pmRndzZHBiL3dubG1xWnJicHlNUlRiQTdHK3pDMFdVM3lSWEFqRmx4bGJtL3paWmZWRm9KZXl4WE04bmZXYwpLV3habFR1TFZuZ1dLUS8vcVkrZ3lJTGRhOFdsUVRIUWhWSm5PamwwY0M4SjBiRU9NWHo2TUttamJzYlFPY1BWCkRrMGhzQVFxZFo3YjN5LzVHT1pscXdITTlZQWU2TEwxR3lxb3l0Tm1EaFp3Q2VFOTNrRHdHUVdTaTFBZkNrU0sKVktLVG1lblhvUWo1WlczYnZHbWFwT2c4R1ZTd3J5ZzFIWUZsSGdUWE5BbnVUUFJVdHlkRWJQVHVua0xmQ1NLbgozSjN6RCs3L0ExUlBpQWYrOHo1SmtQaGlWeFlNMjV1UlJwVHdrS2I2Q0QzSmxNSDdpSVRDL1VPLzM1L1QrZDRTCno1dlFkcEN1MlExN2ozNEdKMG5zSk0vZkdrblZzdWQ2V0pvYU1zZEs1Z29wSFRZV2phc00yOGxHbzVSUnZkVUYKak9iaFdlMU96ajBXaGNURi9qK2ZPV3pzK25RU0h2cVBiZWVaQUFrVHdhWWorMG5oYVJyc1JHWWlCbnFhcEJGOApTS0hKcmdyNkFXaGU2azlGcWMwUlk0a0FzZGJycDFxb0NhVzVtRERkODVFUzJWNjhZdVdScWdxZE5NYUU2c25aCjFaV1F5ZHkrODcwMG9ycSs1YkxkekNLdFU1ZllFNktBZ2dKVW9MWU9vR0VlMklkVmpQdkttYktUVjM0MlZJMGQKNGVxK1E4c0hpeGZGRDlmUVZUeUxBb0lCQVFEbjBGSjcvNVBNNWdjUGpmaVZxaEZrWG43b0h4NU4yTUVybjkyUQprS0VIUWY2YnNIbVFxTlJFOTFiL29NK1FDcmlPTGtaRnY0d0dWVUJwd1VXWXdpemEwK0RDMUx2Nlk3M0p3NEV1CmwwQ3k5RldpQjhzUy9yMXVvRjBXbUx2M2lmVE5IcTlBR3kwczdOME9MRDV5ODZxbXNHRUVHUEV3UHJORnV1S0cKeW1GcGNGVVpDN0V4TDFqK1hmazIxRmcvam1Yc2VvZEw1N3lkWXVIZ1A0VlloUFo5WTJvMWVleHVxV05FSFNjNwpDQ0ZuSzJpZk1zM2lJREdFaUtIc2RsNnp5bUo3Q3E5VVVPWUNZTUtmY2lWZ2xaZGtMTFlUT3NhVElUSnBkT3lxClM1TElpNXZhekZxYXY5aUpqWUpRZzNrVUxJTyt3bHlaUjE2ZmtZSHo4ZEFucENTUEFvSUJBUURWZzE0S2FWT3EKb2ZGNkpGR1c0OWY0TFRsMmJ6ZTZMUlI1ZlZpTFZCTk5pTnZ1cW5mRmNTc0k0eXlsOUdpaTVSZTZHMnB0c1ErSgp6T0VNYXFrVzVLYVpibTFOSzJxQzA1VktyQzdKdklSQ0EyYU5zRTBnVzF6TldYZThNODhSV1VrRGhvd3NBTFdpCm1UVThUall4N1Y2M2g4cElJc1drbnpXOVpUWXd6ZGw4MG9UZG90WVlmaWU1bUpNZkdUSlQrSXB4MTlsd2J6VHQKTEZkbVBibXNmS1ZvYzlWU1R0YTdXVEF0aEZwVkdLeHo5cmZHTmt3cnVqa2FmdUZVdG0xVHgyZk9pN1Z0MHBCUwpybkxlRXRUd3BDV3hQL25wNk0vZ05zM0w4bG5WMUtwb3oyNU1iWE9HanZWK1l5Y3RDSHJ1T1NDWXJsWEpLRU1iClNTWlpySDN6YjhLbkFvSUJBUUM0ZTdYcE1OQ3pOQzFTVjY0Smpic2hvWUpsd0w0aFBlc2RpTENQcUVvK3VHcWsKQktINldpSDBjTk12eFE3cWwxMmc2WHJMYjFGRWlQd21MY1h4ZURheVFBU1RpVEhBWnpoWEpkdmM5RXB0SUw0MQpvUFlnTzlNT0ExbVI3aU5KTU9VOWlMbjN6cWo1STlnWXUyVkhubHVsSktGUTNYaTA2SEZMZ1J0ZUlobThDOFh0CmxMeURaQ2J5NkY2NUgrekxSOHdka3JXeDFzN29naFU0bmRURlNhdlF4aGwwVFgrMzRkNDZDdWw1dFZMQUJHL1MKb2wvdklhZkd6ZVh2aFpTQWlRUXUzNllBK0JEVXU2U250L08vRmMzUnp6Tm53bExlTElFdUkvdGsyNWdKT2ZIagpBdGJvYU4wdk93c0dnRnNQancyWjlwd3k3L1dDRUE3WDBRM1RQbkpKQW9JQkFGT0tCTDk2R254R3hKNlBtMFM0CmZRWGpXL3BVNWE3NGVHeFllTTU2NU5xUFU4Mzc4TVRWMUlxenFBSitzSG9idkw3YWZ6ZlA4VTV2VlJad25Sd1IKOW9WTnlZSktISEIzckkvODhvbUlNdzlKR1ZVU3gvcURCTHByNlFkQUZpS3Bsb0hFb1ErT2I0TGhBdzFIWkxrQQpNUEVLTmtFbktjR1JjWXRiRUdyai85WnczLzkvK05pNGMzNlFqZSs3QWhBTXpNNWlML2RuNjROb3VBR080UmoxCjVCb01TRWplQS9KbG9RNE9IUEh5cDNidjcxT2tad1VzNWE3U09nUFZKTTJFMWI3Z3R1bnpXdmlldk43YTYyb0UKTDZNOGJ1SHdiM1ZBdkNDeUFDaEQvekRuQ0RickZDcHZ3T25ramExM0JmSXpjK2VKUHBOb0oybURvM2V1bjlFaAp4ejBDZ2dFQkFOKy93cGk3Mnh4NndtT2xqTDFpRjcxL2luOThLNERrVlN6b0k0Rll2R2thaUpPQnRKNGRla1ZOCnJ5ckdJcTlkaG1NSElwUW14NWEvSDBNbnR2dmRwSUFaZFcxaUJONnBtQTlYOVZwa1ZtcmZCdWdYcWxxQ0MxankKdlRBYkFuaEZNWVdJVklIeTMzdC9FK2t4T0ZUeU94T2ZjdW4vbVJCczB6SnloUFVjVUtRTjJ6aUtWbEt4Z2JxdQp6Tzh2SHlUYTY2WTFwaHJFSm5kT3IrU2hwSTViMnQ2MGZRZlJYUTdjU0Z3RGxya1ZBTTZLdllkcHFpUWdjZGxkCnkxYmUvRUp3UjJTSktXTkdMbzFGS2NRbWc3SEVnWWRXS2VQNmM2UTV1VVVVT1lRK3RFT2ZoUWpteHhQMjZ3L3MKVzcxRzdNUlBYZXdLdGRRb0ZDY0t6NUFZa1hvYXBaQT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
        crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZGVENDQXYyZ0F3SUJBZ0lVR1ZoaTFMRlBmWXpqTHV0SUZuYTREN0pjdktRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF3d1BZWEpuYjJOa0xXRm5aVzUwTFdOaE1CNFhEVEkxTURjeU9URXdNRFUxTkZvWApEVEkyTURjeU9URXdNRFUxTkZvd0dqRVlNQllHQTFVRUF3d1BZWEpuYjJOa0xXRm5aVzUwTFdOaE1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXdWZEpZMHptdDdBVUUzRWtXTTRNNmNxbE80b0QKR0pBRVczN0JiSGsyREdSaW1XY2EySWJlNzNsUDVYQmNkWTVya2dYV1VUWGo0aEJ0dFpVdmxqU1Z2RUg1cDhpWQpSMEd1OTMyUzdaNk5PajFsL3lOUHdFaTc3bDVMUFNHNE1MZmIwczFCUnZwc1F6UjFzekVjQ0FKSDRqekkwM1E4Ci9UVlNvbzlwSzNSaGxMSmFyWWIzcjFvMG5aQlRyVXY0NDlTai91SUVKQjZHT0JsS2NVaFpwU012Qm9iYUNXTDkKSmlwS3pvbGJVMnBJVUVZNnpvR2w2REQ5bis3eVl2RC9nN28rMGVDMHNDZ21TT0JWVmtDdiszOHpVdS9NL1JGMAo5SVJVYUJVOVE4OXFjL0trWGlIUDdPc3FGcXZWZzdWUFJtbjJDczN6bUVPeVBuek1veXc1RXdwbmlid29ZaTJSCmsyWWhYZ1l5SFIyZ2trenRiT0xIVGl4YUVKbWszMkxvT3JpckluaDJSZDliVlVDOHI4YllMKzRPekVDaG5ROE0KRHVxMjVEcnZRc1lWOEtlWXdqNDVTUmd5Z3lvZjRKOUdoZ3ltSXFER1NyRjBhRXIwTE9kOW83cFUvUWxmM2dDcAp1MGNZYm5QQ0NCRXVXQ0o2cFI5aFBqUnlZVE1OWTRKbk54dVZqcnd1Z3c2UTQvRC91NENJMVJjU2FEVkYxVWVnClpoMVkvekhSbkozZk4wY2RSbzJCczdpSWZDeWVrUGl3QS91T1MrRkhiZEF4QjRrZzduR21CUUUveHFXd01aWVoKanRVQlpkTCtMVVJIS3RlMjR0emcwNit2bi8zQXFSamUwWkFKWjNtUzVza1dZbGhsdHZWaHdMdm1udGxvZ2g1cgpBOWcvcGJGcGh0YkpOMGtDQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRk5BVHhtYXdnb0sxWTNYL2ptWW90UHpvCitIV2FNQjhHQTFVZEl3UVlNQmFBRk5BVHhtYXdnb0sxWTNYL2ptWW90UHpvK0hXYU1BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBQ2U0RThIRVJxZjN3clo5TFBDN3ZGNnk3MEFsZTJIZwpYOVI2OFI1dUNRVlhvdDU0RDk1VHhjVkR6MXdtU0ZvMm5lSUFzT0pVS29DelovaXd4VWZSWFoxQnhrdXBkR1h3CnJOR00vZHFtTCtzdk9ibUVNQnVyRW9ZbGJWalJMSlhiTTZVOGVFS1UwYnRiaFhJd3MzRXZmdG96cXBHSmwvaTEKYitramVQNXNwd1RiVk83d2RZV3hYdFNWcVJJdkdsU3pxcHI2c0k4VXYvN3R4cXdMb1FJNW1qMkhMa1hlYUVVbwpWZmhpZXhtdVhELzhxeHJnVzZsUVpDZ0xRZjVMVkg0cDNwUnNDSkRHdjd2RWsyeFBuV2U3RzAwMzY5emM2YWZVClFjYlNlN0JqQW50UEduSXdmcEQ4L05VT0VvdzVvVUdKUFlBd0VtQ2hiaXNoMnpYWFJTLzJ3TEp4WkJyL3lDMWgKTXNBVWpNT2Y4WTMyWFV3Vll1TmlORDBFeDdadExiR2JEWTFvdjhvckN6MXpMdTB6dDRtZUxwZm5oSkRwcFlVWQpqYURCNW51R3lOYmZqN2FmRGl4V3RrYTBYMExIMld5YnIrNCtNbzJMcTVSWG1nSW44ZmlKRXBvd1ltWWdUb0NyCkVkSmp5NkxEOU9yWlpMY1A4NzFZaDlkV0wvSlgwY1MwMzhhMmU3YndFZEl3c1JVdUhzSEF5T1g4K0l4b0puTVQKdWo2eTdkSnpkeHg5RDRvb3Mvbk11SEcxejRJUnJ2QUhNRVh5NDNBWTRHWXFBYUwwMWxFcWNIaTQycjZ4cmNONwpUem5remZTOG40SHNUaExNdTZCeG9RcHhRSHh5N01KYU40NGtvejU1N0hoMEtsUDUrczdLQkJsZEFaOEtkdjMxCjk3RnNFWUpuNDhxdwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
    server:
      tls:
        create: true
        crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZwekNDQTQrZ0F3SUJBZ0lVT2VheG5FTzB0V0pNZ0lqYWFhR3VKWUI1NjNFd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF3d1BZWEpuYjJOa0xXRm5aVzUwTFdOaE1CNFhEVEkxTURjeU9URTVNREl5T1ZvWApEVEkyTURjeU9URTVNREl5T1Zvd0lURWZNQjBHQTFVRUF3d1dZWEpuYjJOa0xXRm5aVzUwTFhCeWFXNWphWEJoCmJEQ0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQU1WM0pzK25CdzZmVjBsczFoK0gKRnNIUkYwWld1MXZ5WkJQN3ZqSzhiTW1nSVZyNGpsNjU1MS9MUWtONXY4WHMya201SStVVml5aDc5Tko2RTVCYQowVEgySW1HUDYxVXRjbW12aDdrUC9mQVAxTmFSNFNMdFNNNlUwc1RSSmlIODRVbW5rUys2TVZrWXdJM0dnRitPCkhoa0NmT04xb3lIWjVZeWx1N2NPNnZ6alAxcFQ1Qk5SV2N4Mml0clpzMHp4MFJIWXMrTkFaZzQyUVdSTkZJZWMKR09wYnZhNmZYMzE2ZWQ0bHlwMDdaR1FENmE0NUxFdGlBMjJyeGlSRGlnYWh3ejRDTnR3Y3JlRVNlWkV4V2xEMApWMlVXNDJwQ1NyaHN1Y3l4UWNkdnhKc3Q4M0JiV0V6MnllbFFRT2xzYmNqUHdqTmxjYlFQaDhSTnhtekRXalUvCmtqZWZ3V25FVnp5MkNwcGNSdzJjS3lQajhSOENIVUc5Qm9ON0krY1pjeVByMUs3UGpNcVUwVmdJcmIrc1NJTHYKS2l1Ritla2U2VXUxbHY0YzNpVFcyTzJhSWtiQmRyZmcrUVJzWDFaVjRqWDNqbTBaZFh2NDlqSFp2dm9ZOFFyeApSbHFyWHVORmJIeXN2bE1sUVBGckQ5ZmpkOUZ4M0xkb1EvM3pZT000dEFCb3Jvdmp6ejNoYWVyS1RQN0o1cjgwClJNYkdwdmdEczUranNRV0t1YzBCQTJuU2JoSW1wV09YSForZnJwVEJjdzJGSm52dlRBRlRVdllCelREa2s2blQKOW9rQ2ViTG9pUm00SEI2WnhJSkdLWmVYcTFlTkF5OHNUb3AwTjZBbTd2QzM3bkNpbDgzZjNIQTFJVllpVUFKRQpYREpHemlwYzhYWUp2Z2xSbGdGcThUdlRBZ01CQUFHamdkMHdnZG93SHdZRFZSMGpCQmd3Rm9BVTBCUEdackNDCmdyVmpkZitPWmlpMC9PajRkWm93Q1FZRFZSMFRCQUl3QURBTEJnTlZIUThFQkFNQ0JMQXdFd1lEVlIwbEJBd3cKQ2dZSUt3WUJCUVVIQXdFd2F3WURWUjBSQkdRd1lvSXZZWEpuYjJOa0xXRm5aVzUwTFhCeWFXNWphWEJoYkM1aApjbWR2WTJRdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5Q0kyRnlaMjlqWkMxaVpYUmhMWEJ5YVc1amFYQmhiQzVuCmNtOTNkMmx1Wm5KaExtbHVod1IvQUFBQmh3UWlYUTBYTUIwR0ExVWREZ1FXQkJTV1J5NURhNkdNM3AyQzdpbC8KM1lXNHl4ZEZWekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBVStHRTZsd3RkNzE0L20xUmFsY2ZYZDZHajlBVApnU1RwWFQ4VWZLakJTaThTazBZN2M2OEZLN0hCRzFhc2N2MnQ3cHhMM1dCRlF3Unl4eXdVUVRCek4vaHhSRDF6CllJTXI3bzNtU1JxNTd2cU55MTVCczNpQXZSUGhQUjVpR1FjNHlmMHFZR28zSFIwZHR3TkZXY3NIWVNXQk9hY0EKeWU4Qkd6N1NUQjZaaTJUMlJpeTZrb0VMallLcGZIRktKN1ZuQXdoeGlucmc1bkJQSHo2eS9zejZoQzMyMGcvWQpzRlZ1aDJxSDNZYTNleDd2T3NKTERJVldjQU9ZVFJLOEpoTGJOU3ZNMUdzb1Bad3Vad0tNaFdkVThBcjdBd1lGCmN3bWJnMnFhdXcxQUZIMUlHVm81VUNXbHorWllOcnJTNkVONG91bnJidXE0Q29KRzk2S0w0Z2hiVlpXZWo1cWoKSHdsOThGZHJlQ0hxamNWUWxRSXU1Tk9GeXlHNUJlMlQyM0l1WDRCYy9TVnE4VXlvQVVWTmh0cmV6QzM2cHNENwpVVlZkNHVYdnkyK1RUN0ltZGp3SjYvMHI4SzZtekx4UzY5NndrOE9FQ0RhSVRpcTBCRTN2K2JYemtPN1dRMlh5CnVoZTVjQUFXblVvbzhmQTdmbEVPeDBqN1VwZCtjNU5iWC92TVFNck1xeEM0YURTaTd1eFExTTJDdkNURDBDWVkKSmtGQlhsaXRLRHh1a3dpMGQxSnFqVWtRN04rdnRRd1hXRUlGR0VuUXcwMmRyTGhobjJGdU5zTjZKcVFSRHNMLwpPQVFaU1lIUDRtaHJEL3RzQy9DbEdsaGhONmlya2MxOGJFS0VpUjYyZ00vbElSMmdwRzRIa0NqaDF5MFlMWGsxCld2cUFPaG82cjBOVUNBaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRREZkeWJQcHdjT24xZEoKYk5ZZmh4YkIwUmRHVnJ0YjhtUVQrNzR5dkd6Sm9DRmErSTVldWVkZnkwSkRlYi9GN05wSnVTUGxGWXNvZS9UUwplaE9RV3RFeDlpSmhqK3RWTFhKcHI0ZTVELzN3RDlUV2tlRWk3VWpPbE5MRTBTWWgvT0ZKcDVFdnVqRlpHTUNOCnhvQmZqaDRaQW56amRhTWgyZVdNcGJ1M0R1cjg0ejlhVStRVFVWbk1kb3JhMmJOTThkRVIyTFBqUUdZT05rRmsKVFJTSG5CanFXNzJ1bjE5OWVubmVKY3FkTzJSa0ErbXVPU3hMWWdOdHE4WWtRNG9Hb2NNK0FqYmNISzNoRW5tUgpNVnBROUZkbEZ1TnFRa3E0YkxuTXNVSEhiOFNiTGZOd1cxaE05c25wVUVEcGJHM0l6OEl6WlhHMEQ0ZkVUY1pzCncxbzFQNUkzbjhGcHhGYzh0Z3FhWEVjTm5Dc2o0L0VmQWgxQnZRYURleVBuR1hNajY5U3V6NHpLbE5GWUNLMi8KckVpQzd5b3JoZm5wSHVsTHRaYitITjRrMXRqdG1pSkd3WGEzNFBrRWJGOVdWZUkxOTQ1dEdYVjcrUFl4MmI3NgpHUEVLOFVaYXExN2pSV3g4ckw1VEpVRHhhdy9YNDNmUmNkeTNhRVA5ODJEak9MUUFhSzZMNDg4OTRXbnF5a3orCnllYS9ORVRHeHFiNEE3T2ZvN0VGaXJuTkFRTnAwbTRTSnFWamx4MmZuNjZVd1hNTmhTWjc3MHdCVTFMMkFjMHcKNUpPcDAvYUpBbm15NklrWnVCd2VtY1NDUmltWGw2dFhqUU12TEU2S2REZWdKdTd3dCs1d29wZk4zOXh3TlNGVwpJbEFDUkZ3eVJzNHFYUEYyQ2I0SlVaWUJhdkU3MHdJREFRQUJBb0lDQUQzcndrRGxpS0grTjNudjVpbFd6RDBVCjJ5NlViZ1pFT1R2RytucWdlYUMwVlNGWXhoUlFTWXpSaVVMdGY4U0tKRjF2OENDYkk5c2JHOGVRdm1mTEFzU2YKQVdNRXBYQTlZeDVmQzdsdG1WelpLZzNyQ3VWUDhUL09qVlZvbklPVjcvT1AxMGhYSTdoanVhWDd0Qy9DdWc5dgpwMGdRa0lwQjhPaXM0L05nZXpHMzlSclhLYk1oRkg2NFFZeWxMY09ZSk01cTNPWUxRTFYrTC8xSzZvQW40K3hCCnZuWnV4WnZzZHlEQlN3c0pIODc1SnlNYURKaks4SFpJb2thbTR6WjNMV2xaZW1pRm1jVDFiU2VwaVQvUGowUkUKN0NWYkNtRlF2dWJBUXZkT1JpRy9SQkpjb3BEbjVxTUNKb2pNRnBVZENUSGl3c2dMQXJEOURwYjJuMmdKT2trbgpya3o4eFNOSTl6Uy9uRlJTNVRmRXFNbXloVFNwZWtSTm9TZllxZnJwc3U2dlg0blNNT2swZWd4N3paNGdaNmtECkM2aGRDNmkyQ09jQmVGUkhydStaQjlDWi9wdHdYaTh2S05vMEhyR1lTbEpSdzJKWHkxWHl3R3hvV21FdDBJUzEKSWk3TjZNQ1YzYis1VEltR0hGaGhJN0dyR2laYWU0TE9pYllXN01YTmhMMlptcGNLblNBVHkxVFBZTGhWSVZxKwpnRmtCcmM1M3VyczFXUm9pYjJyempPcDUyRGllUE5OUytmQXoxOE4wck5oYnQ2VVJUa1RUZ09OeE82MkJNU3hLCkprZ0lYVmtJYW9Ld0VIMnhKTm1XTlpaME5HbnlEV0FTT2FtOEZhbFIvNy9LWU9PbmRUb01TVEVSbGxXVERlM3AKNkZUbVI4c2tDUWtQejJlMEswSUJBb0lCQVFEeDArdjFXV1ovbStyYUxwblVDR3lpaDRNR0JwWjVvYVF3ME9xcwpJK1hFdFN2cWU0aHdSc1lZaEV3MHZMcTNkZC9vZVRkWGU3OWpaOGhvSVU1STVkNUpTRUZ2aXJYSVlJRGtkZVVICko3c2tNZHc4MnNTbnpiY2hWcUx4WSthcWZ6OXBoa1dVMXJmTW1EQklMSHUvQU9EcVRUTnlSWmNML1h4c0R5ZnYKUXF0cUcxbE1kRXhML2FDeHBockdLK0RKUVRPTElQRitkQkFydGJXUWxXNjJ2elZOOFI4WHlhekF2VWFHSVZ2ZApob0s5dEFqYmNRak9DZ3F2TTdGNDZBOHVEbldXM3lRdVU0L0dEYVk5WW5ZQ1UyUytldm0xK0psb3puSVJDUFJrClh4a1NSR3lkc1BhTHV3cE5SY2o2eDdQRGducnlCb1pONXMyY1l3REhKcDVnWTc4QkFvSUJBUURSQ2F4Q1Z4QnkKYXhPZ09rTEpUTC9UekZBTFRLM3lCdW5IdndGdjF5YmpNckNsRmlCbWphUllMNFNjQVgvM3dPOFFsVGZhL0I2UgpYc1QzbWdaQVlOQTF3L0IrblVhVmZoTFVid016dkYxRURBWmtCcTJQcFVBQ29oTm5tQzhzZkRXb1ZHbWVnTlhmCkZnSjgzRGdtKytNaTBqYXI4ZkdBbzNlekZnZmRDNU5mNFgvck9ZQm1CZExTdzV2TEtDNVVraGhaQzRnQ1BnYkMKeTNxZzFkV2xCUmdYYXZsVHFUaVJ4V3Bub0xDajhqc3NzVHRBWnFCMnl4cVB6YkZGY0Ztc3lXYXoyODNXaC94TgpVaUpnZEVOSFlWSFhHQkZJY3loNVp6cmNSQTlPT1FhWjRRMXlocE1QbTJUUXlOeWJVM05Md05QcjdZTVF3N1lMCmF2MUU3c2E5Q003VEFvSUJBUURTSW9pREpqQSs2c2xrMWVHdHNiUlVkdFNQdytHMXg1UFpKM0VFTEIxWWxPV1kKVjhmemFFeHl1V05PNEVDUGNzb2lSRkttbmsxc241NHhmZDk4ME9JYlk4SVlucnZmWnB3WjZhZ2VVNVAybTZ6NAo1RkRHVDZlMlBJWlNvN0NvcnZIM1RFbmlUOEplOGsvaUoyVlFULzhoR2Z4K2E2SVpOU2VNN282UkJhbldCZlhPCnpiQU95RkYralF2dTcrbmdkOXZHSmRZelA3OWRmQVJOb3N3VjJJa0ZOV1VEVXFmZXc1b29xNHdjTHVvazFmQnMKWHdoN29aWXZNQWdqTytNVTdsT1h5a2F5U3NKQUkxUTFPdjI0ZjZhbkxrMFdwdk1IYzMwQytIa0ZUdTJHUmhicgozLzRjNVdiS1JyMmh6UzZUMFNuc2JXYi9BblBnVk5jME5vYWcwNHdCQW9JQkFIeXFoU1pIWUZLc2sxYlNpRFFmClpxUDh6SndBamhpeWtNZ0VuT25EYWJqRDZWOTdVN1Yxc2RhNStCOUdNYmhqUXZBajNkem0wYUFtNGRjODc0K0QKYllrekl3R1A4S0dGUDl1Ym5WQkVmV2J3dVByOGxKUC9uSzQxVk5kS2hvL0VRQWYwMTh5a3oyZ3RheXhsOWNNaQpJL01IWlgya1hFQTR2VkY3eVJMR0xZMVlJZjc2R3g0OVNOOVRzMTAweUhTOWNISGlrNm1xcmtPTU1NVXM0aTU1ClhFWFRFWUVZZ2RsRjRGQ1BIK21XdEQzU01TRVdVNHFsVkdFQTdrRVlZUkxRUmtUcnlOV3g0Z0dIQTJOODB3Y0YKL2xZR1Q0QmkxWGVaM2h1eEoyT2lWTkoreXBOTHVQYnMyUEkvYUhubUNmUGF1MGlRTE1OWnhQOElQcVhXdFlYVgpjK3NDZ2dFQUhSdXlLK2daZGN0Y25lTXRSRlJ3SHg1VXYxcjR3TTAweHhtR25GUnd5Y3g1MlpjT2psY05SbnFhCkIrREk1ejhwSGVZOVFVaCtjOGl6ZUUvMkxLS2xFOFZjV2hxdVdCblRDVmoxdngvWUd1OHBpSEhjTGNaSjUrOXIKUGc4dy9HVjZxT2REQlJ0Qk1IakZNa1FGYTFVUnNlbFZQSFlmTzkvTktIMStKQUZHcW1kYWEyZGo1NVFGNkp5ZQoxbUpjQkQycVM1R0xZcHRPQ2MvTFpYUmJjTkVoRlJRTWYvc1dXTW5abkd4cTk2Sk9rRFVIeFBGdTg3ckVEcU9jCktiU2pRZDBSbTNvWVExMmVFL2N4Z3ZDTmZnZmVJQldTdmdXSjBISHZ1TU9jL1dGcmF0VFpoY2hVMTlRTUJGWjAKc0xrUTFUeUN2c3hPTjB6OWZnakpzeFhCSTYxUkx3PT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
    proxy:
      tls:
        create: true
        crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYxekNDQTcrZ0F3SUJBZ0lVT2VheG5FTzB0V0pNZ0lqYWFhR3VKWUI1NjNVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dqRVlNQllHQTFVRUF3d1BZWEpuYjJOa0xXRm5aVzUwTFdOaE1CNFhEVEkxTURneE1qRXlOVEEwTUZvWApEVEkyTURneE1qRXlOVEEwTUZvd0pqRWtNQ0lHQTFVRUF3d2JZWEpuYjJOa0xXRm5aVzUwTFhKbGMyOTFjbU5sCkxYQnliM2g1TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF6REVpbFZWQy9NVkUKZHoxTnhpaXQxcDNlTms2bDJQblJLMVRUanNpODNzT0xuQzFwODVGOWVsbVU1SmJEVGNVa2NxM2JHRElpZEgxYgp2Wk81dW5PRERvbGhtTjk2eEl2NzZIUmxQcms2dGRXczlaY21sUm1hcktLSW9zdkpQNDYwTHNsRnhYSTBsNVNiCmQ2Vm1ybFd4eGFwL01RWE5USjNETDhyMVUvcUFEcThRVlZyM1orZG1LZHNJOGdMaHg0T0d3WFdTQVM0ODJ6TE4KN1h6Y1RLWUM1aEhra2tXTDhVRFNiNFpvUVZQRVprRnd2b3pvK1o4SW43aWx0TUFyc1FsR0FLa0dJdVFnZjBFSgpUSEZKR0RYbGRUM2pDRmxreTZiUVJhMjIzL3RDT3J5V0pRUlhaRTBsYTR1a3FMeWZvamZkMmtzZHB0QWVLdU91Cmoxa2hMN0RKQ1pKZWl0SFVoWXUybVN0WVlWN09xSktBSUlCVDZWc2prQmxqU0dUSStsN05ZMWw2OUNGMWpYV2YKcDFvRG1TNklJeVBHL2NUK3dzRmMxcXZtQXE2TmNQaElyQ0drNmpXSXJEck1Bbzd6SW10MG51SzBVUmF1VjJ5cgpQTi9iZkZPa0ZhOCsxLzVGYjVWVVMxYktYeVlmTHVTZWdYaTRpZ1dCOUw3RkwxTmFwRFBiY3d0eEsvbTkyMlpiCkhja2FuK09zMFhPZnQ0TFlhYUp3b0JFZXgzelpJekRmR3pRVUYweVBSUm5RQjgyYVd3VVhkdXlpbmdHTDhobVUKY2FReXRkVm50ZTdCeUF1bVRieFNPY2x1aWR1MUlCcmtUWFI4SVRaRVRDWVRvUysxZVNCYm9JWHF5a2Q2VytNbApwYUY4OURPQWplakp1WWNHQVZZMFUvMjdqeURzbHlFQ0F3RUFBYU9DQVFjd2dnRURNQjhHQTFVZEl3UVlNQmFBCkZOQVR4bWF3Z29LMVkzWC9qbVlvdFB6bytIV2FNQWtHQTFVZEV3UUNNQUF3Q3dZRFZSMFBCQVFEQWdTd01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpDQmlRWURWUjBSQklHQk1IK0NMMkZ5WjI5agpaQzFoWjJWdWRDMXdjbWx1WTJsd1lXd3VZWEpuYjJOa0xuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2dpTmhjbWR2ClkyUXRZbVYwWVMxd2NtbHVZMmx3WVd3dVozSnZkM2RwYm1aeVlTNXBib0liWVhKbmIyTmtMV0ZuWlc1MExYSmwKYzI5MWNtTmxMWEJ5YjNoNWh3Ui9BQUFCaHdRaVhRMFhNQjBHQTFVZERnUVdCQlNpemJoaDdNNGoyekVBN3pSaAp5QmNPMHN6RVJqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFoSWRXK2w3UDFOakNTNEFxNFZ5K0NhRjRaQzVCCm81TG00RUMyb0RvZXBiSnAwdk9WWTkwcWFieThFVjJaeTVNUWN1azlVM09Sb2FSTXE1a3V3Y2lIQi9zb3NvMU4KSTQzVHRVLy9Zbi8raVp3TmhZa1hvOE9hSHh5SFZpQTluSXlXYXlpdVVqeWs1NjZHYzVJR3VkZXNJS0NFb2FoVQppRGFXYkNXdlYrM3lFcmdJZHFBbWpWZkZXOHAzNStOZVNBY2Q0T2lMY1Z1T1VJektBaTl3eFdJd21jZEhNUXFsCm5XMjFDVlpRZkVhWWRZQUpPd1p0ZENBZ3puVE5tQUR0TEY4eStVWTZLdTNQR281U1pIcDcvZ3VpbjFNcW1WVG4KbzR3NitvZzZzMUkrTFNsUm8rdzVBU2VnQVlLZjNwZmJMeGpQd1d0YzdMcmVqUzh6cGRtbkEzU09xdnFGRnJtTgoxdHV2RUgvVWVWYk91cGEwR2FQcEMzMGxvR05EMlhJeTZYY1FHaGFpelpVcElQQ3NjN1k5Vlk1NTBCa1RvQXdkCkw4YmJwZng0cTVMbTQxMEQyM1U2TFlGdldTcU9BcEZkRVhxMTBROFZRdDhLeHVlVzVQczNkaGEvbWQzVGlPYk0KOFNZeDZNMlZIdzlCSzFGV0s4cndEMVVjLzIwQUhjb0dlQ1RqMUh2S0Z3S0wxZHR6eGlvVnFkeld3SktiSXB6dwphUFN3bXlNWHRsTGtuZnQzaUdPZjlKbHkxRWhuK0t2RGpMb1JaQkNna0kzQ2NrM3paL1g0VTBlbENVODA0eXhmCmhHVmxvOWVDRDRuY3kvdUJySEdxY0ZLRnA1NDRjREdVRWdDWmMxeGNnNU80SVNYbElDWFZEcDdFeHRTSmN6OXMKVnVPMlR0dlNzWDUzQW4wPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRE1NU0tWVlVMOHhVUjMKUFUzR0tLM1duZDQyVHFYWStkRXJWTk9PeUx6ZXc0dWNMV256a1gxNldaVGtsc05OeFNSeXJkc1lNaUowZlZ1OQprN202YzRNT2lXR1kzM3JFaS92b2RHVSt1VHExMWF6MWx5YVZHWnFzb29paXk4ay9qclF1eVVYRmNqU1hsSnQzCnBXYXVWYkhGcW44eEJjMU1uY012eXZWVCtvQU9yeEJWV3ZkbjUyWXAyd2p5QXVISGc0YkJkWklCTGp6Yk1zM3QKZk54TXBnTG1FZVNTUll2eFFOSnZobWhCVThSbVFYQytqT2o1bndpZnVLVzB3Q3V4Q1VZQXFRWWk1Q0IvUVFsTQpjVWtZTmVWMVBlTUlXV1RMcHRCRnJiYmYrMEk2dkpZbEJGZGtUU1ZyaTZTb3ZKK2lOOTNhU3gybTBCNHE0NjZQCldTRXZzTWtKa2w2SzBkU0ZpN2FaSzFoaFhzNm9rb0FnZ0ZQcFd5T1FHV05JWk1qNlhzMWpXWHIwSVhXTmRaK24KV2dPWkxvZ2pJOGI5eFA3Q3dWeldxK1lDcm8xdytFaXNJYVRxTllpc09zd0Nqdk1pYTNTZTRyUlJGcTVYYktzOAozOXQ4VTZRVnJ6N1gva1Z2bFZSTFZzcGZKaDh1NUo2QmVMaUtCWUgwdnNVdlUxcWtNOXR6QzNFcitiM2JabHNkCnlScWY0NnpSYzUrM2d0aHBvbkNnRVI3SGZOa2pNTjhiTkJRWFRJOUZHZEFIelpwYkJSZDI3S0tlQVl2eUdaUngKcERLMTFXZTE3c0hJQzZaTnZGSTV5VzZKMjdVZ0d1Uk5kSHdoTmtSTUpoT2hMN1Y1SUZ1Z2hlcktSM3BiNHlXbApvWHowTTRDTjZNbTVod1lCVmpSVC9idVBJT3lYSVFJREFRQUJBb0lDQUJwWG5XbE1CRllWUWZHckdqazkvcjFCCkJRMlhCRnpUVDdtS0dqZmhyRUlGMHFFOWw1MVpUK21FbkltSDdKN0FGK1ZtaWUwYmJLZ0FFeUdJS1E0RmdHc1QKN0tBYTlwemNIVTIrRkdDczUwYlZqOWhvSFUxZmJmMm5BejhUVUwxdkZNNHpYNW1yRTk5WlI5dzkzWnNRaVp4aApWRUxZQjRZQ2xVOTVYTUJ1Z081RUJmU3BCV0ZsY0IvbXRzYjMrYll5UU9SODNTN2pUdTBOWnhVa0JreXFIeFljCnlWTFlmNGNLY0l0OE9MOXl4ZFBXVGV2N1JFUU4wUUJBQXpxb0R3cnFFaHFjTTZNMU1IOFNQaGViUnMyRmlIcGgKVjBSNHVlRHUvby82cXV6RzNxS3l1U0VCNkI5VHQ0ZmlEa1pKZlVPaGR2REdQNGRKY3BiZ1pDRHdvL0FoMjdGeQpCSitYajh1bGZCeTVyTXNab1dSd25vNTk2Yi8waUJMaGhDUDJubVlxVjNjNk1ENTF0TFRZdENReDFtQm5TNE5uCkJQbWdOMlBEMk1KS3hXMittMjIySzF1NllSUTRUMnFsMDBRbU5ISDVxRDZULzRpSW1vZllhYTJjT1NXUGVtY2EKYXd6UFNiK1lISlgzNmNUajRvSE0yUk15ek1zSHYwSGMvMFAvcmh3NHhoWTdYOVh3RGNzeTh5TW0vcmNYd05QVQpIQ2xoT05GNVJQTVl0cGNJRzZyOElaTlh2RG94OXF2TnBSYmYvTDg3WG9oWUNtRXlsQTdJL0Zvd0ZVN3AweVRQCkVCQ2pVcTRLcjU0bjVNVVJJSnpBMTRBamYwOUxubGFySHdhUGxtWjlWTTVvSFhZQlFrZjhzT04wVnBhZlcrNFYKSzZoWU1VSlRrWm9oNmZ5RUNXb0ZBb0lCQVFEMmhpQW1FaWVNSkdVeHVOOXE0NFJ2K1B4VWlqUGhhSEkzM1U3eQpOc2hhU3FJUWZlVWlPR3VhZjdnRzRpRE5IZDNXV0VzTlRVWGwrbm5CSVRZMWJmUlVMWmM2YVAvZjZ3eVU0bDNkClR5Sjk3SE5QajhjVG1VZWltMW0rcUpDNzY1M2s1RkFPYmgvUWRIZGE3T3YySUtaMUIxZHdtNDU2R0wwSzltK0oKNDlscnN3SjdtV2xxTEExbVR0Q05YRnkwSXE2VTMvczNpMGEyU2FpSzZFeWdmWmtuYjdmOTY0cHBLTE0reW5OagpERC9kWGhSV2xHd2FvU08zUEQyeHlzWkJleHRjZ1dPL1laUEN0a1YrTmpzb3VSMHJ0c01EeVpKWnp6WmpOeTA3CkI0WnBDWEZlZEZ6SlVpU0IySzEva2hucFd2Z0tOcFVacWp6U1kyazVmQXI3M0xGZEFvSUJBUURVQ25MNkZEQisKOGtPTGU3V3Z2dlpTbUh6WjRraStSaFdIWWZGMkVvdmMzeTNZWC9QTThyeE5yMkpKV3lqRnMzNTltaWl6YUl2cgp6VjA1L0pSVnlFZ2dnd2d4c0I5ZkJVNmxGeFhIVnhJbEllR1V3bC9JdDhZczg3ZzZRU0tiQTdkSWMrbTBYeVZpCkJndUxxTnlQak1FdXpoeCtSdEZsTE41WGdabEw4SmQ2VnU3RDU3emZLbVVScnRBTWtMS2Mzdzd0QXJadVg1UHYKZ2dib2x6YWhCU2lQYXNrME4rdEJDc0dZZ0oveFRNQUkrYjV2VHBGdTJwaVR6UVZmVjRDS2t1dmcvT2JaT05MSwo2Q1h2aGRLTFBPN1NyWVcvUC90TXBzdE9oaU02bmdFRURjVC91Y09qRXM4dkVtUDB4VFd3R2dWSzRlbUlKUUFPClRsc3ZFWGpHUFF5VkFvSUJBRU1PMndIZ0lGZlRzcDhpM2NzeWxsenJDcUJvYzVKV0dmT3VSSUpJZXBsdEFjYWcKcUVwMXRIZHpWSGl5M0I5UGgzOTl4dlNZVjNJbWZ5WVV4YTBrK3JoSEtvTGQrdlJLK01JckRVTmMrbEhzbHJWRwpzKzFWM1pHUzFvZXhUS1dCZ3hLM05EdW9vd2pPRllWck93aFplMDRNTURIV2Jwd3h6SUtGNUhOS3dtSzBiL0YxCkdxS2gxd2RFV3lDSXhrTE55RldBMDlJWkZhUVNSMEY1elJZKzlBRXhONGhmb09mWUJXSUlLZmtBWlFMdlMzTDkKcnFaVHZPWmtBWmd5UTFtZWhpUFVvbkIxdDM3WW0vQ29DZEdiQVI5WitKUTRLWkk2ZGwzb3JXb0lNdnl4YitBMApvT1MyYm0zUHBlbzBzTTIwVEJKakpJMjFyQlBDck9YUkl4Kzl1WlVDZ2dFQkFNM3NMK2tKL21icXBBb3I1REIvClJmekV0a3RyWkxYVW5rZlNLSXRBUzYvKzFpa1NWbFN0VDQ0cVMwdHVTbFJsa3V3cjhHYjdteGN2WStCU21VUU4KczI1UGtuK2V5WGlnVU5ZbmF6RWlNQzc3am5YSHB2bm83MzdzV2ZmSkZmQnhWV2Y1bWZkZmg1Q0F5bW1oWGtIUwpzakhnWE8rTm13R2s1M0VZSFdZUWl5dDJqWDZYNldiWlp6b2JDVldLbU11Y0hJUzBZN01oQXl4UW5LRDVhVVpMCkdpN2R4L1Q4Y1czREltd1dUajRyQ1R3dVBuRWVYa0xINi9GdDVFL0pUTDVISE9oczgwdjEwVkRZenk2a1NlcUwKREd4eHREZ2R6TkdPRWxkNkVYQjF6Z3EvekplRk1xZUdOc3RDRXV5OU1QeUs2S1RtYk1PWkcwckpjZWh1RVZxRQpJMWtDZ2dFQkFLOFYxOTh6dEVRVUdHdEpabEVVbW93SVZJOERsQ2lJR0pTS2JmT3RJdkFWRDJRdnhzQU5DVzd5ClZCUGJlYXJkMktYUnRhYmxMYUw4RDVvK0FHNUhNVGlodnkySng2ZFRjWUFBRm5tMGY5eTkzbE9HTlJqWStuU0wKQnZwT3ljVlF4THVyTzlyaFFsZWxnMnZjaUVpOS9UT1VqUkZKZ1hYNXJielYvdmFyTTB1OVlQMGRZYS95WkQzRwpPZ2hJQ3diZmk3WHBtcEJldDJDQUZqczVFRUpxOTFRTjlsckNqUTBjd28yRmNBL1JjRVFVY1Ezd0M4QVc4aHpBCmRxaEtYYS9NOHVxS21VUGViVC9YaFRNcnJaUHdKRUdEWndlT085QVFJVTdlQk1scWVHamlYYTRRVXcybktjblIKakRQbmMyUG9ZVk5VTExZbVkxdE54TWxrTjZyZWVOaz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
    userpass:
      create: false  # Not used with mTLS
    jwt:
      create: true  # Managed externally
      key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRRE8zQndqWXZWbjJxUkoKNWlMa3lIUHRPemJkZ2JQd3dOak9YbFdrY3JQNmVqME1UQ2piSzhmTXQwMmFDRWRySzdJdk00TnNzcmJtTG16aQowWE5nbzdxWTcvcUxGZ1BzMnZyV2dIQ05WZTVjbjNlOEF5TDhseFo5U2FtVUV0TlhneWoySnEzVlFTUVpXbzRLCjJFTXpvTkhLNGhHWW1WOThBU1BLYWVyVFFmTTAzR1B0dmcvTE9BMTFBOWJEOExhbVc5Q3JsVUtCblU5cTY1WHAKaDVuRmcwNm5ZWFF1YWpwdzhTLzlpd1hVSHU4REZZcy85NW9SS3FiYlppOFBQZjN1NUgzOHhNTWVJSVNzazJ1eApnaER4NUlITWRxcjd3S3B0WUM5cGlybDh5a3RtWVJDUWl2VHZjNmZFVUQzcDdHNkZ1K3R1Wk53RHBvdjBIOGxhCk5FbThVem13YThJNHAwU3MydE5xbGJtNDM5M2Jzc3JzQ3pkOUE5SnlmdDNYZ0NZZWhaZHI3Y0NMSEdTaTl6amgKdFc0V1ZadzIxTi9yM0hrdFBsZ01uTVR1TXdVWjI3LzAvSm9LQndPd0pCajJZNUhkSWpucGxKNHhqejM2M2FveApiaW0rYk9YZHBFSTZ3akNTY2w5MVVESThPTWFCVWMvTGkySGVDR1dOemRrOUhkTGt3VEhIa2tzSTFkdGladlYwCkx6ZTBqdUFBaGJJMW12ZnFabkdNVmdaZHIxUUc4MkZlVllmK2t3S1pseWxFVytiaVlEL1hWM1AwMnRlRERZWnAKM0crNGQ0WnRFUVJyT0ZXcy9PWUU4UEw2dnBpdGxLSi9Xd3RwU09Yd2pGWThibVJ0akVQVmhLRzZNOWIxTU1BNQpaR0NjdUdOSFhwOVg0NDU2M0dwbXdMRlRxRE9Cc1FJREFRQUJBb0lDQUFHTE9zSUlXbXJIb3RlQzJsS1JETzF4CnRsRjlwdk5HYXkvU0hDdEZxR0oza0ZaVHlLL0hFajhNeEsxZ1A3RTA4cWZmeDJ5em9rSVNTV0dCZk80VkZyN08KdHJUY1NaUDJWKzRySi92a0R1cjl6VEhYNTZaUk5kdWlSYnZiVHB5OTk3dXJrdnRQR01jQUtpUjZVL2tTQzVMTApNR1N1UzF4RWNXa1F0STRXVlV0NUZCMVpnR3BzdlF2NUp2eVFJcnJYMzFVeWdGd3hpWDdUcW9zalJoSm5iaG81CmM5bW5WUStUK3o3V0QybHpnQ2Jxblo4UStPTkZLVmprbUxnUlIwQ0Z6OHRueUFtRTVseVgzcE5FOUYycnpneXgKdTRtMHVNam5jWDhsQ0FpZWhXVEtsMm91d1ZCNnNWODVscGEwK3lld0hQd1dVRjZPR3dnTHh5L1BTVmdZbW1yNwpWY0QwNStabWhaYjk0ZkNXK3k5cjdFM1FKV2dZQ1ZaMHZPQ3NjcTVFTXl2RkdCUTFWamU5SzVhNnFrSHpMUlErCml6WlhhR0o5R0ZMOEpFODdQSTNqSDJlQTV5WU1JaEMyQStsUWlHMTdGb2lTdjlqdFRvNk5SejVUZTQxMVBFT2kKdkZrNm5iOEkxdXdDVkxLZkc5cjBoYzkxQTdTb3A1K1B3YjBka0xlbk5FeVpSeWdzS095ZXRvSTdpem51WmtlagpoVEJyc3VRSXlwT2xqRGZCcG52bzVxZmtMd0ZwT3FmcGZlekpGS21Ed1c0b0ZXMzQ3ckp4TjJjaGZEYkliMUc3CkRSNXNOSWxCOUMveDlhMTZjN3J2c0czaHFocjlWSG9VWXlWREFTdkp2MU1qdzlSV3FDMXNSYm9VZnBOMzFDdnEKQTdCSU9pc1AxK2RVN1dacDZwREpBb0lCQVFEOGdQTmFrWndubWpKdHk1OWcyaFhqNlQrTWN5M0kyc0N5ZXV0OQplSXhlekMvTWpUQ1NEbElwSXluckhWdTY3amFHVmFWNDRBT2N1MFZoU0JEL3M4THVIV1hlcWF4WGxCRnE3YUVYCjEvbmkxQzVFRHFaU0VzdmR6QnJNL0RpSFhqU2FkMTFPT3J5SW9xU3JJamlFTkI3NlZpdVUwM0E3MStiU0xHTmcKSTJ2YlZQS3BIeC85L1hxNlBuQlhMY2d4d09pNnNQQzVlWnEvYkFjUHlYRkVXZXh1Vm5rM3NQYkwrWlhzLzJFRgo2ckJJQTV0R0pKMllzWkZZZ3lsb3h1cTh3ZEJpaHNxTjFYMFJLdTlOZTgwUkVpbDBZbEVrWDZEclp0cFVITHpyCmZJT1FuT2tBNlhreUxaZVBVbGJVcS92VVU4WUk0Z3hlZUVvdHpVZmg4T3psYTNoNUFvSUJBUURSdVYyTnJJOFMKbllGeHNwUkZYVEQ2eXd0ek0rMGdMaENmUkNkd3V1K1NsQWlpU3pTam9RM3ZteXIvZ3RrZ1FoaFJjUVF2QXI1NgpweU4vSEtDNXZrVDVwcTRZODl3QUcrVVRoUTA2bHVFVW1uR1EyUHlxd3JZdkpRU0ZIQVZTRk1lWFByOWdlaXc1CitBbGRjbTkrSnUwYUttaUN2T3RhY0Z4RWR2R0cwVS83NzJKUW1peFRJMjhZQWJEczdpR3UydWIyRS9JTWNiRisKeXpJZlFGelJieTNoTUd6MEJmUmEyeVR6K3dmbmcxLy95OEROcnRRNUdMcVp6L21HeDFpOXFKYjkvaktGT3k5MwoxSVdBRXFmaXE2dGJSR1ZocVNhSzZ1Szh5TlBEVVRqOXdIOTVFbXNENEt2MzF3Z1FUNUhUOVhoNGpsekZLV2R2ClhpaFFacGZzbVBUNUFvSUJBUUNBbkpuWFp0Vlg0cFdQRVNrejVzRkJuaHV0U1RsbjFleFN2SU5ZSEYrN0pWdXYKWDdiK25lYkJaMVRCbWVtUU5DZDNrd1krcERPUzBGeE5hYXltNFlRSFR0Z0ZhdjBLZXJQSWVCTVdsdjZEeDdsdApGdDBtYnNhQ1NhVFpCaHN3OEEzeEk1MVY3RnI5YVlKZ1hJVFc2Y2xoanlTUm9JVEpKblkrVlRla3owWHZxTHdVCjRuS2tKMGtzdGdMNGxLd2trM0szTE1yZ1hnMHhOUy8vbllaZzMwQ3JEc2FkVkRqUXVtYmdHVS9zK0pZamlCcTkKeG9hek1MYXNrOW95c1NiOVQrYjVXRml4bDYwbFltNFRWRnltTms4QkpkYllwUkRNOWsxOGpFcTUwMmtiN3FCTAp3NS9rckE1SGhSUVBMUzZPL3NDZTQ2eVRMY2Z5dmwyL3VyeWZPbmRaQW9JQkFDQU9KaGQrZFl2UjJUUW9xSE1GCnNIUFV6eFkzckpuTGtLelhQUFFGRHBNbjN6MzNJcitUNFU1ck9DSS92TElxaUE4Q3FESUxTRlAwOGY3K3dDNUQKdjhVc3pkVndpSUxYd0tiQUltcC9IejRIOFMzRGpMTUkrZEd3NWNUMnFIV0lTWTE3Z01MZFNaOCtveWZPVXU1RQpRdDlKOWhsdGlNZVUvdlZUL015dmQzczVkcHg5UkNNYyttRC8rU3Z0cGVaVS9SSkZzQ3hvd0VseUEySTFjenByCnRPYURnVk8zQ1VkTjBaTWRIbk1yYUdQdm43T1FjazJiMHdHcGdTa3hsUVhBRy93TWUycFR4b2laU2lKdU40ejAKMGtjcjZCY0tSS0xkRGZUdStUY1VWaEtxOXBEcDJNT0o5cDcyRmZ4d1BRalpyeVUyRlVYcGN5N1poRzN0a0hFUQpXL2tDZ2dFQUZKYjhjZ2V0N0RpNC9ncmJlcFE4YWpnckN0TFh4aUo2Q01DUEJQSU91QVpXYTAyd3NCdVpQTk1QCmg0eWplVlZZbTB1SDc4YzdJWm5xNUp4eGxXNEZzZE5sMmhJdWZnRHBaR1pRTWgwK0NHSkM2WjNSczZMa2dFTmwKaFJZYmNwbk1zOXJoekNPRkwzdXVrZEp2YWljYklVQ2t4WlJHb3ZSRFg3MmROZHJpcUJlWUY5enc3dE1VU3BUVAoyeEMvWlA3REJQQzVRbXRvNjlTQ2ZndFdaRGIyUldUMnQ0TmFHMWY2M2c2MXJDMzhYT3VXV2wzYjhhL0RXZnhOCm5ici9EeXp4K3pMTzJjS3N5NzNBSjN5aElHS1F4WTJveS9HYlpzRzAzZ1d0eFNpbVJpdFZ4a1Bsd0lGZ1NzWmIKRXBWc1QvUndGOHhwajhsbFhFWVIwZkFaZ0JFUHFRPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="

  # RBAC configuration
  rbac:
    create: true
    createClusterRole: true

  # Service account
  serviceAccount:
    create: true
    annotations: {}
      # Add any required annotations for IRSA, Workload Identity, etc.

  # Additional labels for compliance/governance
  labels:
    environment: production
    team: platform
    app: argocd-agent
    version: latest

  # Monitoring annotations
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
