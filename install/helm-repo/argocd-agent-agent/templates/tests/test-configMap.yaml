apiVersion: v1
kind: Pod
metadata:
  name: "test"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['sh', '-c', '
        echo "Testing ConfigMap keys..."
        
        # Test agent.mode
        if [ -f /etc/config/agent.mode ]; then
          echo "✓ agent.mode exists"
          cat /etc/config/agent.mode
        else
          echo "✗ agent.mode missing"
          exit 1
        fi
        
        # Test agent.creds
        if [ -f /etc/config/agent.creds ]; then
          echo "✓ agent.creds exists"
          cat /etc/config/agent.creds
        else
          echo "✗ agent.creds missing"
          exit 1
        fi
        
        # Test agent.tls.client.insecure
        if [ -f /etc/config/agent.tls.client.insecure ]; then
          echo "✓ agent.tls.client.insecure exists"
          cat /etc/config/agent.tls.client.insecure
        else
          echo "✗ agent.tls.client.insecure missing"
          exit 1
        fi
        
        # Test agent.tls.root-ca-path
        if [ -f /etc/config/agent.tls.root-ca-path ]; then
          echo "✓ agent.tls.root-ca-path exists"
          cat /etc/config/agent.tls.root-ca-path
        else
          echo "✗ agent.tls.root-ca-path missing"
          exit 1
        fi
        
        # Test agent.tls.client.cert-path
        if [ -f /etc/config/agent.tls.client.cert-path ]; then
          echo "✓ agent.tls.client.cert-path exists"
          cat /etc/config/agent.tls.client.cert-path
        else
          echo "✗ agent.tls.client.cert-path missing"
          exit 1
        fi
        
        # Test agent.tls.client.key-path
        if [ -f /etc/config/agent.tls.client.key-path ]; then
          echo "✓ agent.tls.client.key-path exists"
          cat /etc/config/agent.tls.client.key-path
        else
          echo "✗ agent.tls.client.key-path missing"
          exit 1
        fi
        
        # Test agent.log.level
        if [ -f /etc/config/agent.log.level ]; then
          echo "✓ agent.log.level exists"
          cat /etc/config/agent.log.level
        else
          echo "✗ agent.log.level missing"
          exit 1
        fi
        
        # Test agent.namespace
        if [ -f /etc/config/agent.namespace ]; then
          echo "✓ agent.namespace exists"
          cat /etc/config/agent.namespace
        else
          echo "✗ agent.namespace missing"
          exit 1
        fi
        
        # Test agent.server.address
        if [ -f /etc/config/agent.server.address ]; then
          echo "✓ agent.server.address exists"
          cat /etc/config/agent.server.address
        else
          echo "✗ agent.server.address missing"
          exit 1
        fi
        
        # Test agent.server.port
        if [ -f /etc/config/agent.server.port ]; then
          echo "✓ agent.server.port exists"
          cat /etc/config/agent.server.port
        else
          echo "✗ agent.server.port missing"
          exit 1
        fi
        
        # Test agent.metrics.port
        if [ -f /etc/config/agent.metrics.port ]; then
          echo "✓ agent.metrics.port exists"
          cat /etc/config/agent.metrics.port
        else
          echo "✗ agent.metrics.port missing"
          exit 1
        fi
        
        # Test agent.healthz.port
        if [ -f /etc/config/agent.healthz.port ]; then
          echo "✓ agent.healthz.port exists"
          cat /etc/config/agent.healthz.port
        else
          echo "✗ agent.healthz.port missing"
          exit 1
        fi
        
        echo "All ConfigMap keys verified successfully!"
      ']
      volumeMounts:
        - name: argocd-agent-params
          mountPath: /etc/config
  volumes:
    - name: argocd-agent-params
      configMap:
        name: argocd-agent-params
  restartPolicy: Never