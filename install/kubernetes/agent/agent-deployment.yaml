apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: argocd-agent-agent
  name: argocd-agent-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-agent-agent
      app.kubernetes.io/part-of: argocd-agent
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-agent-agent
        app.kubernetes.io/part-of: argocd-agent
        app.kubernetes.io/component: agent
    spec:
      containers:
        - args:
            - agent
          env:
          - name: ARGOCD_AGENT_REMOTE_SERVER
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.server.address
                optional: true
          - name: ARGOCD_AGENT_REMOTE_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.server.port
                optional: true
          - name: ARGOCD_AGENT_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.log.level
                optional: true
          - name: ARGOCD_AGENT_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.namespace
                optional: true
          - name: ARGOCD_AGENT_TLS_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.secret-name
                optional: true
          - name: ARGOCD_AGENT_TLS_CLIENT_CERT_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.client.cert-path
                optional: true
          - name: ARGOCD_AGENT_TLS_CLIENT_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.client.key-path
                optional: true
          - name: ARGOCD_AGENT_TLS_INSECURE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.client.insecure
                optional: true
          - name: ARGOCD_AGENT_TLS_ROOT_CA_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.root-ca-secret-name
                optional: true
          - name: ARGOCD_AGENT_TLS_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.tls.root-ca-path
                optional: true
          - name: ARGOCD_AGENT_MODE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.mode
                optional: true
          - name: ARGOCD_AGENT_CREDS
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.creds
                optional: true
          - name: ARGOCD_AGENT_METRICS_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: agent.metrics.port
                optional: true
          image: argocd-agent
          imagePullPolicy: Always
          name: argocd-agent-agent
          ports:
            - containerPort: 8000
              name: metrics
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: userpass-passwd
              mountPath: /app/config/creds
      serviceAccountName: argocd-agent-agent
      volumes:
      - name: userpass-passwd
        secret:
          secretName: argocd-agent-agent-userpass
          items:
          - key: credentials
            path: userpass.creds
