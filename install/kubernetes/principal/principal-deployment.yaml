apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: argocd-agent-principal
  name: argocd-agent-principal
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-agent-principal
      app.kubernetes.io/part-of: argocd-agent
      app.kubernetes.io/component: principal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-agent-principal
        app.kubernetes.io/part-of: argocd-agent
        app.kubernetes.io/component: principal
    spec:
      containers:
        - args:
            - principal
          env:
          - name: ARGOCD_PRINCIPAL_LISTEN_HOST
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.listen.host
                optional: true
          - name: ARGOCD_PRINCIPAL_LISTEN_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.listen.port
                optional: true
          - name: ARGOCD_PRINCIPAL_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.log.level
                optional: true
          - name: ARGOCD_PRINCIPAL_METRICS_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.metrics.port
                optional: true
          - name: ARGOCD_PRINCIPAL_HEALTH_CHECK_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.healthz.port
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.namespace
                optional: true
          - name: ARGOCD_PRINCIPAL_ALLOWED_NAMESPACES
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.allowed-namespaces
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_ENABLE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.namespace-create.enable
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_PATTERN
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.namespace-create.pattern
                optional: true
          - name: ARGOCD_PRINCIPAL_NAMESPACE_CREATE_LABELS
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.namespace-create.labels
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_CERT_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.server.cert-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.server.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ALLOW_GENERATE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.server.allow-generate
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_CLIENT_CERT_REQUIRE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.client-cert.require
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ROOT_CA_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.server.root-ca-secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_SERVER_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.server.root-ca-path
                optional: true
          - name: ARGOCD_PRINCIPAL_TLS_CLIENT_CERT_MATCH_SUBJECT
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.tls.client-cert.match-subject
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.resource-proxy.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_TLS_CERT_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.resource-proxy.tls.cert-path
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_TLS_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.resource-proxy.tls.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_CA_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.resource-proxy.ca.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_RESOURCE_PROXY_CA_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.resource-proxy.ca.path
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_ALLOW_GENERATE
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.jwt.allow-generate
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_SECRET_NAME
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.jwt.secret-name
                optional: true
          - name: ARGOCD_PRINCIPAL_JWT_KEY_PATH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.jwt.key-path
                optional: true
          - name: ARGOCD_PRINCIPAL_AUTH
            valueFrom:
              configMapKeyRef:
                name: argocd-agent-params
                key: principal.auth
                optional: true
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: argocd-redis
                key: auth

          image: argocd-agent
          imagePullPolicy: Always
          name: argocd-agent-principal
          ports:
            - containerPort: 8443
              name: principal
            - containerPort: 8000
              name: metrics
            - containerPort: 8003
              name: healthz
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: jwt-secret
              mountPath: /app/config/jwt
            - name: userpass-passwd
              mountPath: /app/config/userpass
      serviceAccountName: argocd-agent-principal
      volumes:
      - name: userpass-passwd
        secret:
          secretName: argocd-agent-principal-userpass
          items:
          - key: passwd
            path: passwd
          optional: true
      - name: jwt-secret
        secret:
          secretName: argocd-agent-jwt
          items:
          - key: jwt.key
            path: jwt.key
          optional: true
