// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	issuer "github.com/argoproj-labs/argocd-agent/internal/issuer"
	mock "github.com/stretchr/testify/mock"
)

// JwtIssuerOption is an autogenerated mock type for the JwtIssuerOption type
type JwtIssuerOption struct {
	mock.Mock
}

type JwtIssuerOption_Expecter struct {
	mock *mock.Mock
}

func (_m *JwtIssuerOption) EXPECT() *JwtIssuerOption_Expecter {
	return &JwtIssuerOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: i
func (_m *JwtIssuerOption) Execute(i *issuer.JwtIssuer) error {
	ret := _m.Called(i)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*issuer.JwtIssuer) error); ok {
		r0 = rf(i)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// JwtIssuerOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type JwtIssuerOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - i *issuer.JwtIssuer
func (_e *JwtIssuerOption_Expecter) Execute(i interface{}) *JwtIssuerOption_Execute_Call {
	return &JwtIssuerOption_Execute_Call{Call: _e.mock.On("Execute", i)}
}

func (_c *JwtIssuerOption_Execute_Call) Run(run func(i *issuer.JwtIssuer)) *JwtIssuerOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*issuer.JwtIssuer))
	})
	return _c
}

func (_c *JwtIssuerOption_Execute_Call) Return(_a0 error) *JwtIssuerOption_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *JwtIssuerOption_Execute_Call) RunAndReturn(run func(*issuer.JwtIssuer) error) *JwtIssuerOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewJwtIssuerOption creates a new instance of JwtIssuerOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwtIssuerOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *JwtIssuerOption {
	mock := &JwtIssuerOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
