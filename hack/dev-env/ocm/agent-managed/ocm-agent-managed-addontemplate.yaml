apiVersion: addon.open-cluster-management.io/v1alpha1
kind: AddOnTemplate
metadata:
  name: argocd-agent-managed-template
spec:
  addonName: argocd-agent-managed
  agentSpec:
    workload:
      manifests:
        - kind: ServiceAccount
          apiVersion: v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-managed
            namespace: agent-managed
        - kind: Role
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-managed
            namespace: agent-managed
          rules:
            - apiGroups: [argoproj.io]
              resources: [applications, appprojects, applicationsets]
              verbs: [create, get, list, watch, update, delete, patch]
            - apiGroups: [""]
              resources: [secrets, configmaps]
              verbs: [create, get, list, watch, update, patch, delete]
            - apiGroups: [""]
              resources: [events]
              verbs: [create, list]
        - kind: ClusterRole
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-managed
          rules:
            - apiGroups: [argoproj.io]
              resources: [appprojects]
              verbs: [get, list, watch]
        - kind: RoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-managed
            namespace: agent-managed
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: argocd-agent-managed
          subjects:
            - kind: ServiceAccount
              name: argocd-agent-managed
              namespace: agent-managed
        - kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-managed
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: argocd-agent-managed
          subjects:
            - kind: ServiceAccount
              name: argocd-agent-managed
              namespace: agent-managed
        - kind: Deployment
          apiVersion: apps/v1
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-managed
            name: argocd-agent-managed
            namespace: agent-managed
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/name: argocd-agent-managed
                app.kubernetes.io/part-of: argocd-agent
                app.kubernetes.io/component: agent
            template:
              metadata:
                labels:
                  app.kubernetes.io/name: argocd-agent-managed
                  app.kubernetes.io/part-of: argocd-agent
                  app.kubernetes.io/component: agent
              spec:
                serviceAccountName: argocd-agent-managed
                containers:
                  - name: argocd-agent-managed
                    image: ghcr.io/argoproj-labs/argocd-agent/argocd-agent-agent:latest
                    imagePullPolicy: Always
                    args: [/usr/local/bin/argocd-agent-agent]
                    env:
                      - name: ARGOCD_AGENT_REMOTE_SERVER
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.server.address
                            optional: true
                      - name: ARGOCD_AGENT_REMOTE_PORT
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.server.port
                            optional: true
                      - name: ARGOCD_AGENT_LOG_LEVEL
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.log.level
                            optional: true
                      - name: ARGOCD_AGENT_NAMESPACE
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.namespace
                            optional: true
                      - name: ARGOCD_AGENT_TLS_CLIENT_CERT_PATH
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.tls.client.cert-path
                            optional: true
                      - name: ARGOCD_AGENT_TLS_CLIENT_KEY_PATH
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.tls.client.key-path
                            optional: true
                      - name: ARGOCD_AGENT_TLS_INSECURE
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.tls.client.insecure
                            optional: true
                      - name: ARGOCD_AGENT_TLS_ROOT_CA_PATH
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.tls.root-ca-path
                            optional: true
                      - name: ARGOCD_AGENT_MODE
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.mode
                            optional: true
                      - name: ARGOCD_AGENT_CREDS
                        valueFrom:
                          configMapKeyRef:
                            name: argocd-agent-params
                            key: agent.creds.userpass.path
                            optional: true
                    ports:
                      - containerPort: 8000
                        name: metrics
                    securityContext:
                      capabilities:
                        drop: [ALL]
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      seccompProfile:
                        type: RuntimeDefault
                    volumeMounts:
                      - name: userpass-passwd
                        mountPath: /app/config/creds
                volumes:
                  - name: userpass-passwd
                    secret:
                      secretName: argocd-agent-managed-userpass
                      items:
                        - key: credentials
                          path: userpass.creds
        - kind: ConfigMap
          apiVersion: v1
          metadata:
            name: argocd-agent-params
            namespace: agent-managed
          data:
            agent.mode: "managed"
            agent.creds.userpass.path: "userpass:/app/config/creds/userpass.creds"
            agent.tls.client.insecure: "true"
            agent.log.level: "trace"
            agent.namespace: "agent-managed"
            agent.server.address: "192.168.56.103"
            agent.server.port: "443"
